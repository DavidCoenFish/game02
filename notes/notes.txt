dag render target or shader nodes
   do we have them as calculate nodes, 
   or get as many static values as possible as a value node, and use calculate node to hook up run time data

dag node and json
   make a struct to optionall reflect values (render target, shader)
   what can be changed run time? render target width height could change, but not format

multithreaded dag node, set value from any thread, get value from any thread?

callbacks on dag node change/ dirty?

persistance of data nod, load, save? selected language, preferences

file system, better targeting of file change, also questions of lifespan, and ending things on shutdown

ideally shut things down in opposite order of creation, so close FoundFiles before FileSystem? 
but what of stopping async work. change found files to have weak ref to filesystem?


//unix time of head commit
git log -1 --pretty=format:%cd HEAD

design:
   radius earth (max)6378km equator, 6357km poles
      ?6,367.5?
   human field of view 
      horizontal 200 - 220 deg
      vertical 130 - 135 deg
      220 / 135 = 44/27
      27/44 = 0.61363636363636363636363636363636
      1920x1080, 1080/1920 = 0.5625
      130/231 =: 0.5625
      130/231 = ?0.56277056277056277056277056277056?
   distance to horizon, 2m tall, 5km
   8848m tall (everest) 370km
   earth continetal plate 3km to 25km
0.1m, earth radius 6367500m, 

premultiplied
   AlphaToCoverageEnable = FALSE;
   IndependentBlendEnable = FALSE;
   RenderTarget[0].BlendEnable = TRUE;

   // dest.rgb = src.rgb * src.a + dest.rgb * (1 - src.a)
   RenderTarget[0].SrcBlend = D3D11_BLEND_SRC_ALPHA;
   RenderTarget[0].DestBlend = D3D11_BLEND_INV_SRC_ALPHA;
   RenderTarget[0].BlendOp = D3D11_BLEND_OP_ADD;

   // dest.a = 1 - (1 - src.a) * (1 - dest.a) [the math works out]
   RenderTarget[0].SrcBlendAlpha = D3D11_BLEND_INV_DEST_ALPHA;
   RenderTarget[0].DestBlendAlpha = D3D11_BLEND_ONE;
   RenderTarget[0].BlendOpAlpha = D3D11_BLEND_OP_ADD;

   RenderTarget[0].RenderTargetWriteMask = D3D11_COLOR_WRITE_ENABLE_ALL;

prototype erfworld
   get loading screen
     "loading" "[progress]" "client [version]" "database [version]"
   get launch screen
   get warlord creation
